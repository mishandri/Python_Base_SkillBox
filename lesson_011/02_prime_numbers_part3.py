# Часть 3
# Написать несколько функций-фильтров, которые выдает True, если число:
# 1) "счастливое" в обыденном пониманиии - сумма первых цифр равна сумме последних
#       Если число имеет нечетное число цифр (например 727 или 92083),
#       то для вычисления "счастливости" брать равное количество цифр с начала и конца:
#           727 -> 7(2)7 -> 7 == 7 -> True
#           92083 -> 92(0)83 -> 9+2 == 8+3 -> True
numbers = [727, 92083, 55556, 897456, 5467897]

def happy_number(n):
    n = str(n)
    left = 0
    for i in n[0:len(n)//2]:
        left += int(i)
    right = 0
    for i in n[(len(n) + 1) // 2:]:
        right += int(i)
    return True if left == right else False


filter_numbers = filter(happy_number, numbers)
print(list(filter_numbers))

# 2) "палиндромное" - одинаково читающееся в обоих направлениях. Например 723327 и 101
palindroms = ['арозаупаланалапуазора', 'лазерборехеробрезал', 'обычноепредложение']

def palindrom(line):
    return True if line == line[::-1] else False

filter_palindromes = filter(palindrom, palindroms)
print(list(filter_palindromes))


# 3) придумать свою (https://clck.ru/GB5Fc в помощь)
#
# Подумать, как можно применить функции-фильтры к полученной последовательности простых чисел
# для получения, к примеру: простых счастливых чисел, простых палиндромных чисел,
# простых счастливых палиндромных чисел и так далее. Придумать не менее 2х способов.
#
# Подсказка: возможно, нужно будет добавить параметр в итератор/генератор.